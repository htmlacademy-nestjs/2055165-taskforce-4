generator client {
  provider = "prisma-client-js"
  output   = "../../../../../../node_modules/.prisma/mongo-schema"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id                  String     @id @default(auto()) @map("_id") @db.ObjectId
  name                String
  email               String     @unique
  aboutInfo           String     @default("")
  avatar              String     @default("")
  hashPassword        String
  birthDate           DateTime
  city                City
  role                Role
  specialization      String[]
  comments            Comment[]
  feedbacks           FeedBack[]
  createdAt           DateTime   @default(now())
  updatedAt           DateTime   @updatedAt

  @@map("users")
}

model Comment {
  commentId String @id @default(auto()) @map("_id") @db.ObjectId
  text      String
  taskId    Int
  author    User   @relation(fields: [authorId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  authorId  String @db.ObjectId

  @@map("comments")
}

model FeedBack {
  feedbackId String @id @default(auto()) @map("_id") @db.ObjectId
  text       String
  rating     Int
  taskId     Int    @unique
  executorId String @db.ObjectId
  employer   User   @relation(fields: [employerId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  employerId String @db.ObjectId

  @@map("feedbacks")
}

model RefreshSession {
  id                  String     @id @default(auto()) @map("_id") @db.ObjectId
  tokenId             String     @unique
  userId              String
  expiresIn           DateTime
  createdAt           DateTime   @default(now())

  @@map("refresh-sessions")
}

enum City {
  Moscow
  SaintPetersburg
  Vladivostok
}

enum Role {
  Employer
  Executor
}
